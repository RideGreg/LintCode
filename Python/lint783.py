import collections
class Solution:
    def getMinRiskValue(self, n, m, x, y, w):
        ans, d = [0] * (n+1), collections.defaultdict(list)
        for i, xx in enumerate(x):
            yy = y[i]
            d[min(xx,yy)].append(i)
        print d
        for i in xrange(n):
            if i in d.keys():
                for idx in d[i]:
                    v,z = min(x[idx], y[idx]), max(x[idx], y[idx])
                    wt = max(ans[v], w[idx])
                    ans[z] = wt if ans[z] == 0 else min(ans[z], wt)
        return ans[n]

print Solution().getMinRiskValue(26,119,
[0,20,22,15,12,18,2,18,18,24,23,18,6,21,19,15,0,0,0,18,24,0,16,8,15,21,24,7,0,26,19,5,21,15,2,26,15,10,17,24,3,1,5,21,15,21,12,10,7,9,0,3,8,25,26,20,3,22,18,18,26,4,4,22,11,12,10,0,16,2,9,21,21,10,6,22,7,13,25,12,21,23,23,14,20,11,11,25,13,12,1,25,24,18,10,5,18,17,12,4,9,12,19,25,7,9,2,0,14,12,13,18,19,9,0,5,17,7,12],
[26,6,12,5,3,9,19,19,8,14,6,11,15,6,0,3,18,24,6,6,19,13,8,11,24,0,17,14,15,24,9,19,13,14,25,5,18,1,0,18,24,25,9,18,19,23,9,15,21,23,7,6,15,15,3,21,1,23,16,17,21,6,21,9,21,1,13,1,0,21,15,8,25,8,24,21,24,9,9,24,14,16,3,2,1,6,3,18,7,6,17,6,10,12,19,11,26,21,11,8,10,26,1,3,20,11,18,10,16,16,18,22,6,16,14,21,16,3,19],
[35201,36769,62365,27301,95403,53173,46881,52138,82529,90145,23901,94701,64719,74761,69089,1473,79705,23411,11236,87587,87542,29797,54286,99317,84099,27894,44317,40851,97123,4021,73633,59430,58073,52396,28129,73319,29449,73133,38401,45993,35567,56414,86119,2922,2584,34281,23406,23301,13691,43213,14589,15895,10345,79925,9329,62256,2571,41301,12929,89968,40179,94180,42942,45843,2596]
)
print Solution().getMinRiskValue(5, 7,
[0, 0, 1, 2, 3, 3, 4],
[1, 2, 3, 4, 4, 5, 5],
[2, 5, 3, 4, 3, 4, 1]
)
print Solution().getMinRiskValue(4,5,
[0, 1, 1, 2, 3],[1, 2, 3, 4, 4],[3, 2, 4, 2, 1])
